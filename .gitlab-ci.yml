image: lstrcm/centos7

stages:
    - dependencies
    - prebuild
    - build
    # - test
    - deploy

variables:
    CI_DEBUG_TRACE: "false"

dependencies:
    stage: dependencies
    cache:
        key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    artifacts:
        paths:
            - node_modules/
    script:
      - npm install
    when: on_success

build:develop:
    stage: build
    cache:
        key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
        paths:
            - node_modules/
        policy: pull
    script:
        - sed -i "s/-dev/-${CI_PIPELINE_ID}/g" package.json
        - npm run build:dev
    except:
        - release
        - master
        - homolog
        - tags
    dependencies:
        - dependencies
    artifacts:
        name: dist-$CI_JOB_ID
        expire_in: 3d
        paths:
            - dist
    when: on_success

build:release:
    stage: build
    cache:
        key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
        paths:
            - node_modules/
        policy: pull
    script:
        - sed -i "s/-dev/-${CI_PIPELINE_ID}/g" package.json
        - npm run build:stage
    only:
        - release
        - master
        - homolog
    dependencies:
        - dependencies
    artifacts:
        expire_in: 3d
        paths:
            - dist
    when: on_success

build:release:pp:
    stage: build
    cache:
        key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
        paths:
            - node_modules/
        policy: pull
    script:
        - sed -i "s/-dev/-${CI_PIPELINE_ID}/g" package.json
        - npm run build:pp
    only:
        - tags
    dependencies:
        - dependencies
    artifacts:
        expire_in: 3d
        paths:
            - dist
    when: on_success

# build:prod:
#     stage: build
#     cache:
#         key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
#         paths:
#             - node_modules/
#         policy: pull
#     script:
#         - sed -i "s/-dev/-${CI_PIPELINE_ID}/g" package.json
#         - npm run build
#     only:
#         -
#     dependencies:
#         - dependencies
#     artifacts:
#         expire_in: 3d
#         paths:
#             - dist
#     when: on_success

deploy:code_analysis:
    stage: deploy
    before_script:
        - sed -i "s/_local_/build ${CI_PIPELINE_ID}/g" sonar-project.properties
    script:
        - sonar-scanner
    only:
        - develop_product
        - develop_evolucoes
    when: on_success


deploy:develop:
    stage: deploy
    script:
        - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
        - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz -C dist .
        - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
        - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
        - mv new_manifest.json manifest.json
        - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
        - aws s3 cp ./dist s3://dev-product.listofacil.com.br --recursive --cache-control no-cache
        - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - mv dist/** .
        - rm -rf dist
    only:
        - develop_product
    dependencies:
        - build:develop
    artifacts:
        name: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
        expire_in: 3d
        paths:
            - ./
    when: on_success

deploy:evolucoes:
    stage: deploy
    script:
        - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
        - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz -C dist .
        - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
        - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
        - mv new_manifest.json manifest.json
        - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
        - aws s3 cp ./dist s3://dev3.listofacil.com.br --recursive --cache-control no-cache
        - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - mv dist/** .
        - rm -rf dist
    only:
        - develop_evolucoes
    dependencies:
        - build:develop
    artifacts:
        name: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
        expire_in: 3d
        paths:
            - ./
    when: on_success

deploy:release:
    stage: deploy
    script:
        - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
        - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz -C dist .
        - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
        - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
        - mv new_manifest.json manifest.json
        - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
        - aws s3 cp ./dist s3://homolog.listofacil.com.br --recursive --cache-control no-cache
        - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - mv dist/** .
        - rm -rf dist
    only:
       - release
    dependencies:
        - build:release
    artifacts:
        name: $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        expire_in: 3d
        paths:
            - ./
    when: manual


deploy:release:lf:
    stage: deploy
    script:
        - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
        - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz -C dist .
        - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
        - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
        - mv new_manifest.json manifest.json
        - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
        - aws s3 cp ./dist s3://homolog-lf.listofacil.com.br --recursive --cache-control no-cache
        - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - mv dist/** .
        - rm -rf dist
    only:
      - release-bucket
    dependencies:
        - build:release
    artifacts:
        name: $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        expire_in: 3d
        paths:
            - ./
    when: manual

deploy:release:pp:
    stage: deploy
    script:
        - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
        - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz -C dist .
        - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
        - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
        - mv new_manifest.json manifest.json
        - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
        - aws s3 cp ./dist s3://pp-lf.listofacil.com.br --recursive --cache-control no-cache
        - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
        - mv dist/** .
        - rm -rf dist
    only:
        - tags
    dependencies:
        - build:release:pp
    artifacts:
        name: $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
        expire_in: 3d
        paths:
            - ./
    when: manual

# deploy:prod:
#     stage: deploy
#     script:
#         - rm -rf .git .nyc_output .vscode coverage mkdocs src __test__ .gitignore .npmrc .gitlab-ci.yml *.yml *.json *.md
#         - tar -czf $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz -C dist .
#         - aws s3 cp s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json .
#         - cat manifest.json | jq --arg val $CI_PIPELINE_ID '.develop = $val' > new_manifest.json
#         - mv new_manifest.json manifest.json
#         - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz s3://lst-artifacts/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
#         - aws s3 cp manifest.json s3://lst-artifacts/$CI_PROJECT_NAME/manifest.json
#         - aws s3 cp ./dist s3://pp-lf.listofacil.com.br --recursive --cache-control no-cache
#         - rm -rf manifest.json $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar.gz
#         - mv dist/** .
#         - rm -rf dist
#     dependencies:
#         - build:prod
#     artifacts:
#         name: $CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_PIPELINE_ID.tar.gz
#         expire_in: 3d
#         paths:
#             - ./
#     when: manual
